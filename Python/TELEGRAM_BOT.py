# BOT_API = "7770590397:AAHBSzmBrZLiZxYe5JJHTh-2QvTm2K1I3r8"
#
# import telebot
# from telebot.types import ReplyKeyboardMarkup
#
# bot = telebot.TeleBot(BOT_API)
#
#
# @bot.message_handler(commands=['start'])
# def start(message):
#     bot.send_message(message.chat.id, "üòé‚ï≠‚à©‚ïÆ( ‚Ä¢ÃÄ_‚Ä¢ÃÅ )‚ï≠‚à©‚ïÆ–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç!‚ï≠‚à©‚ïÆ( ‚Ä¢ÃÄ_‚Ä¢ÃÅ )‚ï≠‚à©‚ïÆüòé")
#
#
# @bot.message_handler(commands=['help'])
# def help_command(message):
#     bot.send_message(message.chat.id, "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help")
#
#
# @bot.message_handler(func=lambda message: True)
# def unknown_command(message):
#     # bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")
#     bot.send_message(message.chat.id, message.text)
#     bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username}")
#     print(message)
#
#
# bot.polling()

##################################################### –ú–ï–ù–Æ —Å –ö–ù–û–ü–ö–ê–ú–ò_–≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è

# BOT_API = "7770590397:AAHBSzmBrZLiZxYe5JJHTh-2QvTm2K1I3r8"
#
#
# import telebot
# from telebot.types import ReplyKeyboardMarkup, KeyboardButton
#
#
# bot = telebot.TeleBot(BOT_API)
#
#
# def main_menu():
#     markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
#     button_1 = KeyboardButton('–û –±–æ—Ç–µ')
#     button_2 = KeyboardButton('–ü–æ–º–æ—â—å')
#     button_3 = KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç')
#     markup.add(button_1, button_2, button_3)
#     return markup
#
#
# @bot.message_handler(commands=['start'])
# def start(message):
#     bot.send_message(message.chat.id, "üòé‚ï≠‚à©‚ïÆ( ‚Ä¢ÃÄ_‚Ä¢ÃÅ )‚ï≠‚à©‚ïÆ–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç!‚ï≠‚à©‚ïÆ( ‚Ä¢ÃÄ_‚Ä¢ÃÅ )‚ï≠‚à©‚ïÆüòé", reply_markup=main_menu())
#
#
# @bot.message_handler(commands=['help'])
# def help_command(message):
#     bot.send_message(message.chat.id, "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help")
#
#
# @bot.message_handler(func=lambda message: True)
# def unknown_command(message):
#     # bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")
#     bot.send_message(message.chat.id, message.text)
#     bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.username}")
#     print(message)
#
#
# @bot.message_handler(func=lambda message: message.text in ['–û –±–æ—Ç–µ', '–ü–æ–º–æ—â—å', '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç'])
# def handler_buttons(message):
#     if message.text == '–û –±–æ—Ç–µ':
#         bot.send_message(message.chat_id, "–Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –æ–±—É—á–µ–Ω–∏—è")
#     elif message.text == '–ü–æ–º–æ—â—å':
#         bot.send_message(message.chat_id, "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏")
#     elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç':
#         bot.send_message(message.chat_id, "–§–∞–∫—Ç")
#
#
# bot.polling()


##################################################### –ú–ï–ù–Æ —Å –ö–ù–û–ü–ö–ê–ú–ò_–≤ —Å–æ–æ–±—â–µ–Ω–∏–∏

# BOT_API = "7770590397:AAHBSzmBrZLiZxYe5JJHTh-2QvTm2K1I3r8"
#
#
# import telebot
# from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
#
#
# bot = telebot.TeleBot(BOT_API)
#
#
# def inline_menu():
#     markup = InlineKeyboardMarkup(row_width=2)
#     button_1 = InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç –¢–µ–ª–µ–±–æ—Ç:', url="https://pypi.org/project/pyTelegramBotAPI/")
#     button_2 = InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç –¢–µ–ª–µ–±–æ—Ç:', url="https://avatars.mds.yandex.net/get-mpic/1571231/img_id779278418351969261.jpeg/orig")
#     button_3 = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', callback_data='info')
#     button_4 = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', callback_data='info')
#     button_5 = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', callback_data='info')
#     button_6 = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', callback_data='info')
#     button_7 = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', callback_data='info')
#     button_8 = InlineKeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', callback_data='info')
#     markup.add(button_1, button_2, button_3, button_4, button_5, button_6, button_7, button_8)
#     return markup
#
#
# @bot.message_handler(commands=['start'])
# def start(message):
#     bot.send_message(message.chat.id, "üòé‚ï≠‚à©‚ïÆ( ‚Ä¢ÃÄ_‚Ä¢ÃÅ )‚ï≠‚à©‚ïÆ–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç!‚ï≠‚à©‚ïÆ( ‚Ä¢ÃÄ_‚Ä¢ÃÅ )‚ï≠‚à©‚ïÆüòé")
#
#
# @bot.message_handler(commands=['help'])
# def help_command(message):
#     bot.send_message(message.chat.id, "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help")
#
#
# @bot.message_handler(commands=['menu'])
# def menu(message):
#     bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=inline_menu())
#
#
# @bot.callback_query_handler(func=lambda call: True)
# def callback_query(call):
#     if call.data == "info":
#         bot.send_message(call.message.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –≤ –Ω–∞ Python")
#
#
# bot.polling()



####################################################### –ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤

# import telebot
# import requests
#
# from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
# from telebot.types import ReplyKeyboardMarkup, KeyboardButton
#
# BOT_API = "7683989927:AAExSrCaEwgYo_90HFYUVIgn5DIWmJTarjk"
# OMDB_API_KEY = "caf5b564"
#
# bot = telebot.TeleBot(BOT_API)
#
#
# @bot.message_handler(commands=['start'])
# def start(message):
#     bot.send_message(message.chat.id, "üòé–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.üòé\n"
#                                         "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —è –Ω–∞–π–¥—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º!")
#
#
# def get_movie_info(title):
#     url = f"http://www.omdbapi.com/?t={title}&apikey={OMDB_API_KEY}"
#     response = requests.get(url)
#     data = response.json()
#
#     if data.get("Response") == "True":
#         movie_info = (
#             f"üé• *{data['Title']}* *({data['Year']})*\n"
#             f"üåü *–†–µ–π—Ç–∏–Ω–≥:* {data['imdbRating']}\n"
#             f"üé¨ *–ñ–∞–Ω—Ä:* {data['Genre']}\n"
#             f"üë§ *–†–µ–∂–∏—Å—Å–µ—Ä:* {data['Genre']}\n"
#             f"üëΩ *–ê–∫—Ç–µ—Ä—ã:* {data['Actors']}\n"
#             f"üí¨ *–û–ø–∏—Å–∞–Ω–∏–µ:* {data['Plot']}\n"
#         )
#         poster = data.get("Poster", "")
#         return movie_info, poster
#     else:
#         return "–§–∏–ª—å–º –ø–æ —Ç–∞–∫–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω!", None
#
#
# @bot.message_handler(func=lambda message: True)
# def search_movie(message):
#     movie_info, poster = get_movie_info(message.text)
#     if poster and poster != "N/A":
#         bot.send_photo(message.chat.id, poster, caption=movie_info, parse_mode="Markdown")
#     else:
#         bot.send_message(message.chat.id, movie_info, parse_mode="Markdown")
#
#
# bot.polling()


####################################################### –ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –≥–æ–¥—É –≤—ã–ø—É—Å–∫–∞

import telebot
import requests
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

BOT_API = "7683989927:AAExSrCaEwgYo_90HFYUVIgn5DIWmJTarjk"
OMDB_API_KEY = "caf5b564"

bot = telebot.TeleBot(BOT_API)

@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup()
    button_title = InlineKeyboardButton("–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞", callback_data='search_by_title')
    button_year = InlineKeyboardButton("–ü–æ–∏—Å–∫ –ø–æ –≥–æ–¥—É –≤—ã–ø—É—Å–∫–∞", callback_data='search_by_year')
    markup.add(button_title, button_year)

    bot.send_message(message.chat.id, "üòé–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.üòé\n"
                                        "–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == 'search_by_title':
        bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º:")
        bot.answer_callback_query(call.id)
    elif call.data == 'search_by_year':
        bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ —Ñ–∏–ª—å–º–∞:")
        bot.answer_callback_query(call.id)

def get_movie_info(title):
    url = f"http://www.omdbapi.com/?t={title}&apikey={OMDB_API_KEY}"
    response = requests.get(url)
    data = response.json()

    if data.get("Response") == "True":
        movie_info = (
            f"üé• *{data['Title']}* *({data['Year']})*\n"
            f"üåü *–†–µ–π—Ç–∏–Ω–≥:* {data['imdbRating']}\n"
            f"üé¨ *–ñ–∞–Ω—Ä:* {data['Genre']}\n"
            f"üë§ *–†–µ–∂–∏—Å—Å–µ—Ä:* {data['Director']}\n"
            f"üëΩ *–ê–∫—Ç–µ—Ä—ã:* {data['Actors']}\n"
            f"üí¨ *–û–ø–∏—Å–∞–Ω–∏–µ:* {data['Plot']}\n"
        )
        poster = data.get("Poster", "")
        return movie_info, poster
    else:
        return "–§–∏–ª—å–º –ø–æ —Ç–∞–∫–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω!", None

@bot.message_handler(func=lambda message: True)
def search_movie(message):
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –∏–∑–≤–ª–µ—á—å –≥–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        year = int(message.text)
        # –ó–¥–µ—Å—å —è –¥–æ–±–∞–≤–ª—é –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≥–æ–¥—É. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ API, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å —Ñ–∏–ª—å–º—ã –∑–∞ —ç—Ç–æ—Ç –≥–æ–¥
        bot.send_message(message.chat.id, f"–ò—â—É —Ñ–∏–ª—å–º—ã, –≤—ã–ø—É—â–µ–Ω–Ω—ã–µ –≤ {year}...")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≥–æ–¥—É
    except ValueError:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –≥–æ–¥, —Ç–æ –∏—Å–∫–∞—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞
        movie_info, poster = get_movie_info(message.text)
        if poster and poster != "N/A":
            bot.send_photo(message.chat.id, poster, caption=movie_info, parse_mode="Markdown")
        else:
            bot.send_message(message.chat.id, movie_info, parse_mode="Markdown")

bot.polling()
